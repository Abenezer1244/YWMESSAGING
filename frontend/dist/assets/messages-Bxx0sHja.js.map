{"version":3,"file":"messages-Bxx0sHja.js","sources":["../../src/stores/messageStore.js","../../src/api/messages.js"],"sourcesContent":["import { create } from 'zustand';\nconst useMessageStore = create()((set) => ({\n    // State\n    messages: [],\n    selectedRecipients: null,\n    isLoading: false,\n    // Actions\n    setMessages: (messages) => {\n        set({ messages });\n    },\n    setSelectedRecipients: (recipients) => {\n        set({ selectedRecipients: recipients });\n    },\n    setLoading: (loading) => {\n        set({ isLoading: loading });\n    },\n    addMessage: (message) => {\n        set((state) => ({\n            messages: [message, ...state.messages],\n        }));\n    },\n}));\nexport default useMessageStore;\n//# sourceMappingURL=messageStore.js.map","import client from './client';\n/**\n * Connect Twilio credentials\n */\nexport async function connectTwilio(data) {\n    const response = await client.post('/twilio/connect', data);\n    return response.data.data;\n}\n/**\n * Send message to recipients\n */\nexport async function sendMessage(data) {\n    const response = await client.post('/messages/send', data);\n    return response.data.data;\n}\n/**\n * Get message history with pagination\n */\nexport async function getMessageHistory(options = {}) {\n    const params = new URLSearchParams();\n    if (options.page)\n        params.append('page', options.page.toString());\n    if (options.limit)\n        params.append('limit', options.limit.toString());\n    if (options.status)\n        params.append('status', options.status);\n    const response = await client.get(`/messages/history?${params.toString()}`);\n    return response.data;\n}\n/**\n * Get single message details\n */\nexport async function getMessageDetails(messageId) {\n    const response = await client.get(`/messages/${messageId}`);\n    return response.data.data;\n}\n//# sourceMappingURL=messages.js.map"],"names":["useMessageStore","create","set","messages","recipients","loading","message","state","sendMessage","data","client","getMessageHistory","options","params"],"mappings":"+CACK,MAACA,EAAkBC,IAAUC,IAAS,CAEvC,SAAU,CAAA,EACV,mBAAoB,KACpB,UAAW,GAEX,YAAcC,GAAa,CACvBD,EAAI,CAAE,SAAAC,EAAU,CACpB,EACA,sBAAwBC,GAAe,CACnCF,EAAI,CAAE,mBAAoBE,EAAY,CAC1C,EACA,WAAaC,GAAY,CACrBH,EAAI,CAAE,UAAWG,EAAS,CAC9B,EACA,WAAaC,GAAY,CACrBJ,EAAKK,IAAW,CACZ,SAAU,CAACD,EAAS,GAAGC,EAAM,QAAQ,CACjD,EAAU,CACN,CACJ,EAAE,ECVK,eAAeC,EAAYC,EAAM,CAEpC,OADiB,MAAMC,EAAO,KAAK,iBAAkBD,CAAI,GACzC,KAAK,IACzB,CAIO,eAAeE,EAAkBC,EAAU,GAAI,CAClD,MAAMC,EAAS,IAAI,gBACnB,OAAID,EAAQ,MACRC,EAAO,OAAO,OAAQD,EAAQ,KAAK,SAAQ,CAAE,EAC7CA,EAAQ,OACRC,EAAO,OAAO,QAASD,EAAQ,MAAM,SAAQ,CAAE,EAC/CA,EAAQ,QACRC,EAAO,OAAO,SAAUD,EAAQ,MAAM,GACzB,MAAMF,EAAO,IAAI,qBAAqBG,EAAO,SAAQ,CAAE,EAAE,GAC1D,IACpB"}